

//take the last six digits, use modulo operation
//input n, calculate S=1!+2!+3!+...+n!. Take the last six digits not include leading zero.
//n<=10^6
#include<stdio.h>
#include<math.h>
int main()
{
   int n,S=0;
   scanf("%d",&n);
   for(int i=1;i<=n;i++)
   {
       int fac=1;
       for(int j=1;j<=i;j++)
       {
           fac *=j;
       }

           S+=fac;

   }
   printf("%d\n",S%1000000);

}
input
10
output
37913




#include<stdio.h>
#include<iostream>
#include<time.h>
using namespace std;
int main()
{
    freopen("C:\\Users\\lenovo\\Desktop\\tmp.txt","r",stdin);
   const int MOD=1000000;
   int n,S=0;
   scanf("%d",&n);

  cout<<"n=="<<n<<endl;
   for(int i=1;i<=n;i++)
   {
       int fac=1;
       for(int j=1;j<=i;j++)
       {
           fac=(fac*j%MOD);
       }
       S=(S+fac)%MOD;
   }
   printf("%d\n",S);
   printf("Time used=%.2f\n",(double)clock()/CLOCKS_PER_SEC);
  fclose(stdin);

}
input
20
40
80
160
1600
6400
12800
25600
51200

output
n==20
820313
Time used=0.01
n==40
940313
Time used=0.00
n==80
940313
Time used=0.00
n==160
940313
Time used=0.01
n==1600
940313
Time used=0.03
n==6400
940313
Time used=0.26
n==12800
940313
Time used=0.95
n==25600
940313
Time used=3.50
n==51200
940313
Time used=13.68

//it's expensive on time by using loop. About 5 hours is needed when n is 10^6.
//The answer is always the same after n=40. It's because the last six digits of the 
//answer when n is 25 are zeros. if(n>25) n=25 is prefered.

//if(n>25) n=25


#include<stdio.h>
#include<iostream>
#include<time.h>
using namespace std;
int main()
{
    freopen("C:\\Users\\lenovo\\Desktop\\tmp.txt","r",stdin);
   const int MOD=1000000;
   int n,S=0;
   scanf("%d",&n);

  cout<<"n=="<<n<<endl;
  if(n>25)n=25;
   for(int i=1;i<=n;i++)
   {
       int fac=1;
       for(int j=1;j<=i;j++)
       {
           fac=(fac*j%MOD);
       }
       S=(S+fac)%MOD;
   }
   printf("%d\n",S);
   printf("Time used=%.2f\n",(double)clock()/CLOCKS_PER_SEC);
  fclose(stdin);

}
input
1000000
output
n==1000000
940313
Time used=0.03



//given some intergers, output the max, min, average


#include<stdio.h>
#include<iostream>
#include<time.h>
#define LOCAL//delete before submission
#define INF 1000000000
using namespace std;
int main()
{
    #ifdef LOCAL
    freopen("C:\\Users\\lenovo\\Desktop\\tmp.txt","r",stdin);
    freopen("C:\\Users\\lenovo\\Desktop\\tmpout.txt","w",stdout);
    #endif
    int x,n=0,min=INF,max=-INF,s=0;
    while(scanf("%d",&x)==1)
    {
        s+=x;
        if(x<min)min=x;
        if(x>max)max=x;
         /*
    printf("x=%d,min=%d,max=%d\n",x,min,max);
    */
    n++;
    }
    printf("%d %d %.3f\n",min,max,(double)s/n);


  fclose(stdin);
  fclose(stdout);

}
input
2 8 3 5 1 7 3 6
output
1 8 4.375
//to avoid forgetting to delete redirection before submission, #define LOCAL #ifdef LOCAL #endif ,deleteing #define LOCAL is needed


//when file input output is a must and redirection is not allowed, here is the code
#include<stdio.h>
#include<iostream>
#include<time.h>
#define LOCAL
#define INF 1000000000
using namespace std;
int main()
{
    FILE *fin, *fout;
    fin=fopen("C:\\Users\\lenovo\\Desktop\\tmp.txt","r");
    fout=fopen("C:\\Users\\lenovo\\Desktop\\tmpout.txt","w");

    int x,n=0,min=INF,max=-INF,s=0;
    while(fscanf(fin,"%d",&x)==1)
    {
        s+=x;
        if(x<min)min=x;
        if(x>max)max=x;
         /*
    printf("x=%d,min=%d,max=%d\n",x,min,max);
    */
    n++;
    }
    fprintf(fout,"%d %d %.3f\n",min,max,(double)s/n);


  fclose(fin);
  fclose(fout);

}

input
2 8 3 5 2 7 3 7
output
2 8 4.625

//Scanf has return value. It returns the number of variables that are successfully inputted.
//same problem as above, input multiple tests. For each test, the first line is n, and the second line is n integers.
//when n is 0, the input ends.




#include<stdio.h>
#include<iostream>
#include<time.h>
#define INF 1000000000
using namespace std;
int main()
{


   freopen("C:\\Users\\lenovo\\Desktop\\tmp.txt","r",stdin);

    int x,n=0,kase=0;
    while(scanf("%d",&n)==1&&n)
    {
        int s=0,min=INF,max=-INF;
        for(int i=0;i<n;i++)
        {
            scanf("%d",&x);
            s+=x;
        if(x<min)min=x;
        if(x>max)max=x;
        }

         /*
    printf("x=%d,min=%d,max=%d\n",x,min,max);

    */
     printf("Case %d: %d %d %.3f\n",++kase,min,max,(double)s/n);

    }



  fclose(stdin);


}

input
8
2 8 3 5 1 7 3 6
4
-4 6 10 0
0
output
Case 1: 1 8 4.375
Case 2: -4 10 3.000

